# Environment Variables Configuration for Benchmark Analyzer
# ===========================================================
# Copy this file to .env and update the values as needed
# This file should be kept in version control as documentation
# The actual .env file should NOT be committed to version control

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================

# Application environment (development, testing, production)
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG=true

# Enable testing mode (true/false)
TESTING=false

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MySQL Database Host
DB_HOST=localhost

# MySQL Database Port
DB_PORT=3306

# MySQL Database Username
DB_USER=benchmark

# MySQL Database Password
DB_PASSWORD=benchmark123

# MySQL Database Name
DB_NAME=perf_framework

# MySQL Database Driver (pymysql, mysqldb)
DB_DRIVER=pymysql

# Database Connection Pool Settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# Enable SQL query echo (true/false) - useful for debugging
DB_ECHO=false

# =============================================================================
# API CONFIGURATION
# =============================================================================

# API Server Host
API_HOST=0.0.0.0

# API Server Port
API_PORT=8000

# Enable API debug mode (true/false)
API_DEBUG=false

# Enable API auto-reload (true/false) - for development only
API_RELOAD=false

# Number of API workers (for production)
API_WORKERS=1

# API Log Level (debug, info, warning, error, critical)
API_LOG_LEVEL=info

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Secret key for JWT tokens and encryption (CHANGE IN PRODUCTION!)
SECRET_KEY=your-very-secret-key-change-in-production

# JWT Algorithm
JWT_ALGORITHM=HS256

# Access token expiration time in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=30

# API Key header name
API_KEY_HEADER=X-API-Key

# API Key value (if using API key authentication)
API_KEY=

# Enable authentication (true/false)
ENABLE_AUTH=false

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=*

# Allow credentials in CORS requests (true/false)
CORS_ALLOW_CREDENTIALS=true

# Allowed HTTP methods (comma-separated)
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Allowed headers (comma-separated)
CORS_ALLOW_HEADERS=*

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Maximum file size in bytes (100MB = 104857600)
MAX_FILE_SIZE=104857600

# Allowed file extensions (comma-separated)
ALLOWED_EXTENSIONS=.zip,.json,.csv,.yaml,.yml

# Upload directory path
UPLOAD_DIR=uploads

# Temporary directory path
TEMP_DIR=temp

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log format string
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# Log file path (leave empty to disable file logging)
LOG_FILE_PATH=

# Maximum log file size in bytes (10MB = 10485760)
LOG_MAX_BYTES=10485760

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# Enable file logging (true/false)
ENABLE_FILE_LOGGING=false

# =============================================================================
# RATE LIMITING
# =============================================================================

# Enable rate limiting (true/false)
RATE_LIMIT_ENABLED=false

# Requests per minute limit
RATE_LIMIT_RPM=60

# Requests per hour limit
RATE_LIMIT_RPH=1000

# Requests per day limit
RATE_LIMIT_RPD=10000

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# Enable caching (true/false)
CACHE_ENABLED=false

# Cache backend (memory, redis)
CACHE_BACKEND=memory

# Redis URL (if using Redis cache)
REDIS_URL=redis://localhost:6379/0

# Redis password
REDIS_PASSWORD=redis123

# Default cache TTL in seconds
CACHE_DEFAULT_TTL=300

# Maximum cache size (for memory backend)
CACHE_MAX_SIZE=1000

# =============================================================================
# MONITORING AND METRICS
# =============================================================================

# Enable metrics collection (true/false)
ENABLE_METRICS=false

# Metrics endpoint path
METRICS_ENDPOINT=/metrics

# Health check endpoint path
HEALTH_ENDPOINT=/health

# Enable distributed tracing (true/false)
ENABLE_TRACING=false

# =============================================================================
# PAGINATION SETTINGS
# =============================================================================

# Default page size for API responses
DEFAULT_PAGE_SIZE=50

# Maximum page size allowed
MAX_PAGE_SIZE=1000

# =============================================================================
# BACKGROUND TASKS
# =============================================================================

# Enable background task processing (true/false)
BACKGROUND_TASKS_ENABLED=false

# Number of background workers
BACKGROUND_WORKER_COUNT=2

# Background task queue size
BACKGROUND_QUEUE_SIZE=100

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Grafana Configuration
GRAFANA_BASE_URL=http://localhost:3000
GRAFANA_API_KEY=
GRAFANA_TIMEOUT=30

# Notification Configuration
NOTIFICATION_WEBHOOK_URL=
EMAIL_SMTP_SERVER=
EMAIL_SMTP_PORT=587
EMAIL_USERNAME=
EMAIL_PASSWORD=

# =============================================================================
# DOCKER COMPOSE SETTINGS
# =============================================================================

# MySQL Docker Settings
MYSQL_ROOT_PASSWORD=benchmark123
MYSQL_DATABASE=perf_framework
MYSQL_USER=benchmark
MYSQL_PASSWORD=benchmark123
MYSQL_PORT=3306

# Grafana Docker Settings
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin123
GRAFANA_PORT=3000

# Redis Docker Settings
REDIS_PORT=6379

# Nginx Docker Settings (for production)
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# Prometheus Docker Settings (for monitoring)
PROMETHEUS_PORT=9090

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Skip waiting for dependencies during startup (true/false)
SKIP_WAIT=false

# Skip database initialization during startup (true/false)
SKIP_DB_INIT=false

# Enable verbose logging for development (true/false)
VERBOSE_LOGGING=false

# =============================================================================
# CLI SETTINGS
# =============================================================================

# Default engineer name for CLI operations
DEFAULT_ENGINEER=

# Default test comments for CLI operations
DEFAULT_COMMENTS=

# CLI output format (table, json, yaml)
CLI_OUTPUT_FORMAT=table

# =============================================================================
# EXAMPLES AND DOCUMENTATION
# =============================================================================

# Example production configuration:
# ENVIRONMENT=production
# DEBUG=false
# DB_HOST=prod-mysql.company.com
# DB_PASSWORD=super-secure-password
# SECRET_KEY=very-long-random-secret-key
# ENABLE_AUTH=true
# CORS_ORIGINS=https://dashboard.company.com,https://api.company.com
# ENABLE_METRICS=true
# ENABLE_FILE_LOGGING=true

# Example development configuration:
# ENVIRONMENT=development
# DEBUG=true
# API_RELOAD=true
# DB_HOST=localhost
# CORS_ORIGINS=*
# LOG_LEVEL=DEBUG
